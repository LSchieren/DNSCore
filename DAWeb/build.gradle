buildscript {
	ext {
		grailsVersion = project.grailsVersion
	}
	
    repositories {
		mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
	
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.1"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

group "DAWeb"
version "0.1"

apply plugin:"eclipse"
apply plugin:"java"
apply plugin:"maven"
apply plugin:"maven-publish"
//apply from: 'https://raw.githubusercontent.com/...'
//apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
	grailsVersion = project.grailsVersion
	gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
	mavenLocal()
	maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
	imports {
		mavenBom "org.grails:grails-bom:$grailsVersion"
	}
	applyMavenExclusions false
}

dependencies {
	
	compile("org.apache.activemq:activemq-client:5.9.0") {
		 exclude module: 'activemq-openwire-generator'
		 exclude module: 'commons-logging'
		 exclude module: 'spring-context'
		 exclude module: 'xalan'
		 exclude module: 'slf4j-api'
		 exclude module: 'org.slf4j'
		 exclude module: 'xml-apis'
	}
	
	compile("org.quartz-scheduler:quartz:2.2.1") {
		exclude group: 'slf4j-api', module: 'c3p0'
	  }
	compile "org.grails:grails-datastore-rest-client:5.0.0.RC2"
	compile "org.grails.plugins:jquery-date-time-picker:0.2.0"
	compile "org.grails.plugins:ajax-tags:1.0.0.RC1"
	compile "org.grails.plugins:jms:2.0.0.RC2"
	compile "org.grails.plugins:spring-security-core:3.1.2"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
//	provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
	runtime 'org.hsqldb:hsqldb:2.3.1'
	runtime "org.apache.activemq:activemq-spring:5.11.1"
	runtime "postgresql:postgresql:9.0-801.jdbc4"	
	runtime "org.grails.plugins:jquery:1.11.0.2"
	runtime "org.grails.plugins:hibernate5"
	runtime "org.hibernate:hibernate-core:5.1.3.Final"
	runtime "org.hibernate:hibernate-ehcache:5.1.3.Final"
//	runtime "org.slf4j:slf4j-api:1.4.2"
	
//    testCompile "org.grails:grails-plugin-testing"
//    testCompile "org.grails.plugins:geb"
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
//     jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
 	jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"]
}

task wrapper(type: Wrapper) {
	gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

tasks.withType(JavaExec) {
	if (System.getProperty('DEBUG', 'false') == 'true') {
		jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
	}
}